#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STD 100

typedef struct {
    int id;
    char name[100];
    char phone[100];
    int age;
    int Used;

} Student;

Student data[MAX_STD];

void Insert(int id, char* name, char* phone, int age){

    for (int i = 0; i < MAX_STD; ++i) {
        if(data[i].Used && data[i].id == id){
            printf("\033[31m !!! 이미 존재하는 학번입니다. !!!\033[0m\n\n");
            return;
        }
    }

    for (int i = 0; i < MAX_STD; ++i) {
        if(!data[i].Used){
            data[i].id = id;
            data[i].age = age;
            strcpy(data[i].name,name);
            strcpy(data[i].phone,phone);
            data[i].Used = 1;

            printf("\n [데이터 삽입 완료 : 학번 : %d, 이름 : %s]\n\n",id,name);
            return;
        }
    }
    printf(" 데이터가 모두 찼습니다.\n\n");
}

void Update(int id, char* update){
    for (int i = 0; i < MAX_STD; ++i) {
        if(data[i].Used && data[i].id == id){
            strcpy(data[i].name,update);
            printf(" 수정 되었습니다 : %d -> %s\n\n",id,update);
            return;
        }
    }
    printf(" 데이터가 없습니다.\n\n");
}

void Delete(int id, char* name){
    for (int i = 0; i < MAX_STD; ++i) {
        if(data[i].Used && data[i].id == id){
            data[i].Used = 0;
            printf(" 데이터가 삭제 되었습니다. : %d, %s\n\n",id,data[i].name);
            return;
        }
    }
    printf(" 일치하는 데이터가 없습니다.\n\n");
}

void Search(int id){
    printf("---------------------\n");
    for (int i = 0; i < MAX_STD; ++i) {
        if(data[i].Used && data[i].id == id){
            printf(" 데이터를 검색했습니다.\n---------------------\n 학번 : %d\n 이름 : %s\n 전화번호 : %s\n 나이 : %d\n---------------------\n \n\n",id,data[i].name,data[i].phone,data[i].age);
            return;
        }
    }
    printf(" 데이터를 찾지 못했습니다.\n\n");
}

void All(){
    int Used =0;

    for (int i = 0; i < MAX_STD; ++i) {
        if (data[i].Used == 1) {
            printf(" 이름 : %s, 학번 : %d \n", data[i].name, data[i].id);
            Used = 1;
        }
    }
    if(Used == 0)
    printf("\033[31m !!! 입력된 데이터가 없습니다. !!!\033[0m\n\n");
}

int main(){
    int select, id, age;
    char name[100];
    char phone[100];

    while(1){
        printf("\033[35m===================\033[0m");
        printf("\033[32m\n     -- MENU -- \n\033[0m");
        printf("\033[35m===================\n\033[0m");
        printf("#  1. 데이터 삽입     \n");
        printf("#  2. 데이터 수정     \n");
        printf("#  3. 데이터 삭제     \n");
        printf("#  4. 데이터 검색     \n");
        printf("#  5. 모든 데이터 검색 \n");
        printf("#  6. 프로그램 종료   \n");
        printf("\033[35m===================\n\033[0m");
        printf("선택 : ");
        scanf("%d",&select);
        getchar();

        switch (select) {

            case 1:
                printf("\n 데이터를 삽입합니다!\n\n");
                printf(" 학번 입력 : ");
                scanf(" %d",&id);
                getchar();
                printf(" 이름 입력 : ");
                fgets(name,sizeof(name),stdin);
                name[strcspn(name,"\n")] = 0;
                printf("전화번호 입력 : ");
                fgets(phone,sizeof(phone),stdin);
                phone[strcspn(phone,"\n")] = 0;
                printf("나이 입력 : ");
                scanf(" %d",&age);
                getchar();
                Insert(id,name,phone,age);
                break;

            case 2:
                printf("\n 데이터를 수정합니다!\n\n");
                printf("수정할 학번 입력 : ");
                scanf("%d",&id);
                getchar();
                printf("새로운 이름 입력 : ");
                fgets(name, sizeof(name),stdin);
                name[strcspn(name,"\n")] = 0;
                Update(id,name);
                break;

            case 3:
                printf("\n 데이터를 삭제 합니다!\n\n");
                printf("삭제할 데이터의 학번을 입력하세요 : ");
                scanf("%d",&id);
                getchar();
                Delete(id,name);
                break;

            case 4:
                printf("\n 데이터를 검색합니다!\n\n");
                printf("검색할 데이터의 학번을 입력하세요 : ");
                scanf("%d",&id);
                Search(id);
                break;

            case 5:
                printf("\n 모든 데이터를 검색합니다!\n\n");
                All();
                break;

            case 6:
                printf("\n 프로그램 종료!\n");

                return 0;
        }
    }
}
