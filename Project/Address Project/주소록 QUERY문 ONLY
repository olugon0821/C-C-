#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <mysql/mysql.h>


#define MAX_STD 100


typedef struct {

    char id[30]; // 학번 문자열로 사용
    char name[100];
    char phone[100];
    int age;
    int Used;

} Student;

Student data[MAX_STD];


// ##################  SQL 쿼리문을 이용한 CreateTable  ################## //
void CreateTable(char* table,MYSQL* conn){
    char query[255];
    sprintf(query,"CREATE TABLE %s(id VARCHAR(50) PRIMARY KEY, name VARCHAR(50), phone VARCHAR(100), age VARCHAR(20))",table);
    if(mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf(" %s 테이블이 생성 되었습니다!\n",table);
}


// ##################  SQL 쿼리문을 이용한 DeleteTable  ################## //
void DeleteTable(char* table, MYSQL* conn){
    char query[255];
    sprintf(query,"DROP TABLE %s",table);
    if(mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf(" 테이블이 삭제되었습니다!\n");
}



// ##################  SQL 쿼리문을 이용한 Insert  ################## //
void Insert(char* id, char* name, char* phone, int age, MYSQL *conn){
    char query[255];
    sprintf(query,"INSERT into user (id, name, phone, age) VALUES ('%s', '%s', '%s', '%d')",id,name,phone,age);
    if(mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n 데이터 삽입 완료 : \n 학번 : %s \n 이름 : %s\n 전화번호 : %s\n 나이 : %d\n\n", id, name,phone,age);
}


// ##################  SQL 쿼리문을 이용한 Update  ################## //
void Update_Name(char* id, char* name, MYSQL* conn){
    char query[255];
    sprintf(query,"UPDATE user SET name = '%s' WHERE id = %s",name,id);
    if (mysql_query(conn, query)) {
        fprintf(stderr, "%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n \033[31m!![데이터 수정 완료: 이름이 %s로 업데이트되었습니다.]!!\033[0m\n\n", name);
}


void Update_Phone(char* id, char* phone, MYSQL* conn){
    char query[255];
    sprintf(query,"UPDATE user SET phone = '%s' WHERE id = %s",phone,id);
    if (mysql_query(conn, query)) {
        fprintf(stderr, "%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n \033[31m!![데이터 수정 완료: 전화번호가 %s로 업데이트되었습니다.]!!\033[0m\n\n", phone);
}


void Update_Age(char* id, int age, MYSQL* conn){
    char query[255];
    sprintf(query,"UPDATE user SET age = %d WHERE id = %s",age,id);
    if (mysql_query(conn, query)) {
        fprintf(stderr, "%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n \033[31m!![데이터 수정 완료: 나이가 %d로 업데이트 되었습니다.]!!\033[0m\n\n", age);
}


void Update_Search(char* id, MYSQL* conn) {

    int select;
    printf("\n데이터를 수정합니다!\n\n");
    printf("\033[35m===================\n\033[0m");
    printf("#  1. 이름 수정\n");
    printf("#  2. 전화번호 수정\n");
    printf("#  3. 나이 수정\n");
    printf("\033[35m===================\n\033[0m");
    printf(" 선택: ");
    scanf("%d", &select);
    getchar();

    switch (select) {
        case 1: {
            char name[100];
            printf(" 새로운 이름 입력: ");
            fgets(name, sizeof(name), stdin);
            name[strcspn(name, "\n")] = 0;
            Update_Name(id, name, conn);
            break;
        }
        case 2: {
            char phone[100];
            printf(" 새로운 전화번호 입력: ");
            fgets(phone, sizeof(phone), stdin);
            phone[strcspn(phone, "\n")] = 0;
            Update_Phone(id, phone, conn);
            break;
        }
        case 3: {
            int age;
            printf(" 새로운 나이 입력: ");
            scanf("%d", &age);
            getchar();
            Update_Age(id, age, conn);
            break;
        }
        default:
            printf(" 잘못된 선택입니다.\n");
    }
}


// ##################  SQL 쿼리문을 이용한 Delete  ################## //
void Delete_id(char* id, MYSQL* conn){
    char query[255];
    sprintf(query,"DELETE FROM user WHERE id = %s",id);
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n [데이터 삭제 완료!] \n\n");
}


void Delete_name(char* name, MYSQL* conn){
    char query[255];
    sprintf(query,"DELETE FROM user WHERE name = '%s'",name);
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }
    printf("\n [데이터 삭제 완료!] \n\n");
}


// ##################  SQL 쿼리문을 이용한 Search  ################## //
void Search_id(char* id, MYSQL* conn){
    MYSQL_RES* res;
    MYSQL_ROW row;
    char query[255];

    sprintf(query,"SELECT * FROM user WHERE id = %s",id);
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf("\n 해당 데이터를 검색했습니다! \n");
    printf("\033[36m------------------------\n\033[0m");

    res = mysql_store_result(conn);
    while (row = mysql_fetch_row(res)){
        printf(" 학번 : %s\n 이름 : %s\n 전화번호 : %s\n 나이 : %s\033[36m\n------------------------\n\033[0m", row[0], row[1], row[2], row[3]);
    }

    mysql_free_result(res);

}


void Search_name(char* name, MYSQL* conn){
    MYSQL_RES* res;
    MYSQL_ROW row;
    char query[255];

    sprintf(query,"SELECT * FROM user WHERE name = '%s'",name);
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf("\n 해당 데이터를 검색했습니다! \n");
    printf("\033[36m------------------------\n\033[0m");

    res = mysql_store_result(conn);
    while (row = mysql_fetch_row(res)){
        printf(" 학번 : %s\n 이름 : %s\n 전화번호 : %s\n 나이 : %s\033[36m\n------------------------\n\033[0m", row[0], row[1], row[2], row[3]);
    }

    mysql_free_result(res);

}


void Search_age(int age, MYSQL* conn){
    MYSQL_RES* res;
    MYSQL_ROW row;
    char query[255];

    sprintf(query,"SELECT * FROM user WHERE age = %d",age);
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf("\n 해당 데이터를 검색했습니다! \n");
    printf("\033[36m------------------------\n\033[0m");

    res = mysql_store_result(conn);
    while (row = mysql_fetch_row(res)){
        printf(" 학번 : %s\n 이름 : %s\n 전화번호 : %s\n 나이 : %s\033[36m\n------------------------\n\033[0m", row[0], row[1], row[2], row[3]);
    }

    mysql_free_result(res);

}


// ##################  SQL 쿼리문을 이용한 SearchALL  ################## //
void SearchALL(MYSQL* conn){
    MYSQL_RES* res;
    MYSQL_ROW row;
    char query[255];

    sprintf(query,"SELECT * FROM user");
    if (mysql_query(conn,query)){
        fprintf(stderr,"%s\n", mysql_error(conn));
        exit(1);
    }

    printf("\n 해당 데이터를 검색했습니다! \n");
    printf("\033[36m------------------------\n\033[0m");

    res = mysql_store_result(conn);
    while (row = mysql_fetch_row(res)){
        printf(" 학번 : %s\n 이름 : %s\n 전화번호 : %s\n 나이 : %s\033[36m\n------------------------\n\033[0m", row[0], row[1], row[2], row[3]);
    }

    mysql_free_result(res);

}

int main(){

    MYSQL* conn;
    conn = mysql_init(NULL);
    if(conn == NULL){
        fprintf(stderr,"mysql_init() failed\n");
        exit(1);
    }

    if (mysql_real_connect(conn,"localhost","lgg","iot123","Address",3306,NULL,0) == NULL){
        fprintf(stderr,"mysql_real_connect() failed: %s\n", mysql_error(conn));
        mysql_close(conn);
        exit(1);
    }

    int select, age;
    int search_op = 0;
    int delete_op = 0;
    char name[100];
    char phone[100];
    char id[20];
    char table[100];

    while(1){
        printf("\033[35m===================\033[0m");
        printf("\033[32m\n     -- MENU -- \n\033[0m");
        printf("\033[35m===================\n\033[0m");
        printf("#  1. 데이터 삽입     \n");
        printf("#  2. 데이터 수정     \n");
        printf("#  3. 데이터 삭제     \n");
        printf("#  4. 데이터 검색     \n");
        printf("#  5. 모든 데이터 검색 \n");
        printf("#  6. 테이블 생성 \n");
        printf("#  7. 테이블 삭제 \n");
        printf("#  8. 프로그램 종료   \n");
        printf("\033[35m===================\n\033[0m");
        printf(" 선택 : ");
        scanf("%d",&select);
        getchar();


        switch (select) {

            case 1:
                printf("\n 데이터를 삽입합니다!\n\n");
                printf(" 학번 입력 : ");
                fgets(id, sizeof(id), stdin);
                id[strcspn(id, "\n")] = 0;
                printf(" 이름 입력 : ");
                fgets(name,sizeof(name),stdin);
                name[strcspn(name,"\n")] = 0;
                printf(" 전화번호 입력 : ");
                fgets(phone,sizeof(phone),stdin);
                phone[strcspn(phone,"\n")] = 0;
                printf(" 나이 입력 : ");
                scanf(" %d",&age);
                getchar();
                Insert(id,name,phone,age,conn);
                break;

            case 2:
                printf("\n 데이터를 수정합니다! \n\n");
                printf("\033[35m----------------------\n\033[0m");
                printf(" 수정할 학번을 입력하세요 : ");
                fgets(id, sizeof(id),stdin);
                Update_Search(id,conn);
                break;

            case 3:
                printf("\n 데이터를 삭제합니다!\n\n");
                printf("\033[35m===================\n\033[0m");
                printf("#  1. 학번으로 삭제\n");
                printf("#  2. 이름으로 삭제\n");
                printf("\033[35m===================\n\033[0m");
                printf(" 선택 : ");
                scanf("%d",&delete_op);
                getchar();

                switch (delete_op) {
                    case 1:
                        printf(" 삭제 할 학번을 입력하세요! : ");
                        fgets(id, sizeof(id),stdin);
                        id[strcspn(id,"\n")] = 0;
                        Delete_id(id,conn);
                        break;

                    case 2:
                        printf(" 삭제 할 이름을 입력하세요! : ");
                        fgets(name, sizeof(name),stdin);
                        name[strcspn(name,"\n")] = 0;
                        Delete_name(name,conn);
                        break;

                }
                break;

            case 4:
                printf("\n 데이터를 검색합니다!\n\n");
                printf("\033[35m===================\n\033[0m");
                printf("#  1. 학번 검색\n");
                printf("#  2. 이름 검색\n");
                printf("#  3. 나이 검색\n");
                printf("\033[35m===================\n\033[0m");
                printf(" 선택 : ");
                scanf("%d",&search_op);
                getchar();
                switch (search_op) {    // 이중 switch문으로 세부 기능 구현
                    case 1:
                        printf("검색할 학번을 입력하세요! : ");
                        fgets(id, sizeof(id),stdin);
                        id[strcspn(id,"\n")] = 0;
                        Search_id(id,conn);
                        break;

                    case 2:
                        printf("검색할 이름을 입력하세요! : ");
                        fgets(name, sizeof(name),stdin);
                        name[strcspn(name,"\n")] = 0;
                        Search_name(name,conn);
                        break;

                    case 3:
                        printf("검색할 나이를 입력하세요! : ");
                        scanf("%d",&age);
                        getchar();
                        Search_age(age,conn);
                        break;
                }
                break;

            case 5:
                printf("\033[31m\n=====================\n\033[0m");
                printf(" 모든 데이터를 검색합니다!\n");
                printf("\033[31m=====================\n\033[0m");
                SearchALL(conn);
                break;

            case 6:
                printf(" 생성할 테이블 이름을 입력하세요! : ");
                fgets(table, sizeof(table),stdin);
                name[strcspn(table,"\n")] = 0;
                CreateTable(table,conn);
                break;

            case 7:
                printf(" 삭제할 테이블 이름을 입력하세요! : ");
                fgets(table, sizeof(table),stdin);
                name[strcspn(table,"\n")] = 0;
                DeleteTable(table,conn);
                break;

            case 8:
                printf("\n 프로그램 종료!\n");

                return 0;
        }
        printf("메뉴로 돌아가기(아무키나 입력하세요) : ");
        scanf("%d", &select);
        getchar();

        if (select == 0) {
            continue;
        }
    }
}
